name: Bump Tag Version on Main Merge v1

on:
  push:
    branches:
      - test-branch

jobs:
  bump_tag_version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Determine version bump
        id: determine_version
        run: |
          BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})
          if [[ $BRANCH_NAME =~ ^fix/ ]]; then
            echo "::set-output name=VERSION_BUMP::patch"
          elif [[ $BRANCH_NAME =~ ^feature/ ]]; then
            echo "::set-output name=VERSION_BUMP::minor"
          fi

      - name: Get latest tag
        id: latest_tag
        run: echo ::set-output name=TAG::$(git describe --tags `git rev-list --tags --max-count=1`)

      - name: Bump tag version
        id: bump_version
        run: |
          OLD_TAG=$TAG
          IFS='-' read -ra PARTS <<< "$OLD_TAG"
          VERSION_PART="${PARTS[0]}"
          PATCH_PART="${PARTS[1]}"
          PATCH_NUMBER=$(echo $PATCH_PART | cut -d'.' -f3)
          MINOR_NUMBER=$(echo $PATCH_PART | cut -d'.' -f2)
          MAJOR_NUMBER=$(echo $PATCH_PART | cut -d'.' -f1)
          if [[ "${VERSION_BUMP}" == "patch" ]]; then
            NEW_PATCH_NUMBER=$((PATCH_NUMBER + 1))
            NEW_TAG="$VERSION_PART-$MINOR_NUMBER.$PATCH_NUMBER.$((PATCH_NUMBER+1))"
          elif [[ "${VERSION_BUMP}" == "minor" ]]; then
            NEW_MINOR_NUMBER=$((MINOR_NUMBER + 1))
            NEW_TAG="$VERSION_PART-$((MINOR_NUMBER+1)).0.0"
          fi
          echo "::set-output name=NEW_TAG::$NEW_TAG"

      - name: Create new tag
        if: ${{ success() }}
        run: |
          git tag $NEW_TAG
          git push origin $NEW_TAG